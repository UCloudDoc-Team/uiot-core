
## 移植平台介绍
使用乐鑫官方的esp-idf开发环境，将uiot-core sdk修改成其中的一个组件，使用户能够在乐鑫的官方开发环境中使用sdk提供的接口连接uiot-core平台。 <br>
ESP8266与ESP32同样使用esp-idf环境，但是环境配置和代码不一样需要分别单独配置。

## esp-idf开发环境设置

### 配置官方开发环境
首先配置好esp-idf开发环境，参考文档： https://blog.csdn.net/u010177891/article/details/92016695 <br>
安装完成后的编译界面 <br>
![](/images/esp8266_命令界面.png)

### 使用ESP8266_SDK
1.下载ESP8266_SDK: https://git.ucloudadmin.com/usdk/esp8266_sdk <br>
2.替换$IDF_PATH路径下的官方代码，或者将$IDF_PATH修改成ESP8266_SDK的路径 <br>
3.按照官方教程编译下载代码测试。 <br>

## 编译及下载sample(esp\ESP8266_RTOS_SDK\examples\protocols\ucloud_mqtt\mqtt为例)

### 修改sample中app_main.c的产品三要素

### 配置编译选项

使用以下命令打开编译选项配置界面
```bash
make menuconfig
```
修改串口配置
Serial flasher config-> <br>
![](/images/esp8266_配置串口.png)

Default serial port修改为esp8266当前串口号 <br>
Flash size修改为实际大小 <br>

修改mqtt的默认库为UCLOUD_MQTT <br>
Component config->MQTT->Choose MQTT library勾选UCLOUD_MQTT <br>
![](/images/esp8266_选择ucloud_mqtt.png)

Component config->MQTT->UCLOUD_MQTT配置编译选项，根据实际要使用的选择 <br>

修改sample中的wifi配置 <br>
Example Configuration->

### 编译sample
```bash
make all
```

### 下载sample到开发板
注意在make menuconfig中配置的串口需要和实际的一致否则会下载失败
```bash
make flash
```

### 在串口上观察sample执行输出
```bash
make monitor
```
也可以直接使用串口工具如IPOP等查看串口输出
